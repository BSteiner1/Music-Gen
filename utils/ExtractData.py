import json

def all_user_sessions(path, num_users):
    """
    Extracts and processes pitch value sequences from user sessions for the input and output generated by Coconet.

    This function reads data from a JSON file, extracts pitch value sequences from user sessions,
    removes duplicates, and returns a list containing pairs of unique pitch value tuples for each user.

    Args:
        path (str): The path to the JSON file containing the data.
        num_users (int): The number of users' data to process.

    Returns:
        list: A list containing pairs of unique pitch value tuples (input, output) for each user's sessions.
    """
    
    with open(path, 'r') as file:
        all_sessions = []

        for i in range(num_users):
            line = file.readline().strip()

            # Parse the user's line as JSON data
            parsed_data = json.loads(line)

            # Number of sessions per user
            user_sessions = len(parsed_data['input_sequence'])

            # Initialise an empty list for a user
            user_list = [] 

            # Extract each session for a user
            for session in range(user_sessions):
                input_notes = parsed_data['input_sequence'][session]['notes']
                output_notes = parsed_data['output_sequence'][session]['notes']

                # Sort the input and output notes by start time (0.0 if not present)
                sorted_input = sorted(input_notes, key=lambda x: x.get('startTime', 0.0))
                sorted_output = sorted(output_notes, key=lambda x: x.get('startTime', 0.0))
                
                # Input and output pitch lists
                input_pitches = [note['pitch'] for note in sorted_input]
                output_pitches = [note['pitch'] for note in sorted_output]

                input_pitch_tuple = tuple(input_pitches)
                output_pitch_tuple = tuple(output_pitches)

                # Append to list if input is not a duplicate
                all_inputs = [tuple[0] for tuple in user_list]
                if input_pitch_tuple not in all_inputs:
                    user_list.append((input_pitch_tuple, output_pitch_tuple))

            all_sessions.append(user_list)
                
    return all_sessions